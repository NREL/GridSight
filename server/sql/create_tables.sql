CREATE TABLE IF NOT EXISTS projects(
    PROJECT_ID INTEGER PRIMARY KEY ASC,
    PUBLIC INT NOT NULL,
    ORIGIN_NAME TEXT NOT NULL,
    DISPLAY_NAME VARCHAR(64) NULL,
    PROJECT_DESCRIPTION TEXT NULL

) WITHOUT ROWID;


/**/
CREATE TABLE IF NOT EXISTS scenarios(
    SCENARIO_ID INTEGER PRIMARY KEY ASC,
    PROJECT_ID INT NOT NULL,
    ORIGIN_NAME TEXT NOT NULL,
    DISPLAY_NAME VARCHAR(64) NULL,
    SCENARIO_DESCRIPTION TEXT NULL,
    FOREIGN KEY(PROJECT_ID) REFERENCES projects(PROJECT_ID)
) WITHOUT ROWID;

/**/
CREATE TABLE IF NOT EXISTS layers(
    LAYER_ID INTEGER PRIMARY KEY ASC,
    SCENARIO_ID INT NOT NULL,
    GEO_ID VARCHAR(64) NOT NULL, /*UUID of GEOJSON FILE*/
    ORIGIN_NAME TEXT NOT NULL,
    DISPLAY_NAME VARCHAR(64) NULL,
    LAYER_DESCRIPTION TEXT NULL,
    FOREIGN KEY(SCENARIO_ID) REFERENCES scenarios(SCENARIO_ID)
);

/**/
CREATE TABLE IF NOT EXISTS timeseries(
    TS_ID INTEGER PRIMARY KEY,
    LAYER_ID INT NOT NULL,
    UUID VARCHAR(64) NOT NULL, /*UUID of Timeseries file*/
    ORIGIN_NAME TEXT NOT NULL,
    DISPLAY_NAME VARCHAR(64) NULL,
    TS_DESCRIPTION TEXT NULL,
    FOREIGN KEY(LAYER_ID) REFERENCES layers(LAYER_ID)
) WITHOUT ROWID;

/**/
CREATE TABLE IF NOT EXISTS timestats(
    ID INTEGER PRIMARY ASC,
    TS_ID INT NOT NULL,
    MIN_VALUE REAL NOT NULL, /** MIN AND MAX VALUE across the entire dataset **/
    MAX_VALUE REAL NOT NULL,
    TS_ID INT FOREIGN KEY REFERENCES timeseries(TS_ID)
);

/**/
CREATE TABLE IF NOT EXISTS USERS (
    USER_ID INTEGER PRIMARY KEY ASC,
    ORIGIN_NAME TEXT NOT NULL,
    DISPLAY_NAME TEXT NULL,
);

/**/
CREATE TABLE IF NOT EXISTS ROLES (
    ROLE_ID INTEGER PRIMARY KEY ASC,
    ORIGIN_NAME TEXT NOT NULL,
    DISPLAY_NAME TEXT NULL,
);

